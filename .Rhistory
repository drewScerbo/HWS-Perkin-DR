library(FITSio)
# get all the .fits files
s <-
"C:/Users/drews/OneDrive/Documents/Hobart 16-17/Astronomy/error images"
files <-
list.files(
path = s,
pattern = "*.fits",
full.names = T,
recursive = TRUE
)
print(paste("number of files:", length(files)), quote = FALSE)
xNumber <- 3352
yNumber <- 2532
# set up lists to hold file names
darkFrameFiles <- list()
gFlatFiles <- list()
iFlatFiles <- list()
rFlatFiles <- list()
zFlatFiles <- list()
yFlatFiles <- list()
masterBias <-
array(0, dim = c(xNumber, yNumber)) # make into constants
counter <- 0
count <- length(files)
for (x in files) {
print(x)
counter <- counter + 1
Y <- readFITS(x)
s <- Y$hdr[which(Y$hdr == "IMAGETYP") + 1]
if (s == "Bias Frame") {
# average all biases into a master bias field
masterBias <- masterBias + Y$imDat
} else if (s == "Dark Frame") {
darkFrameFiles[[length(darkFrameFiles) + 1]] <- x
} else if (s == "Flat Field") {
filter <- Y$hdr[which(Y$hdr == "FILTER") + 1]
if (filter == "g''") {
gFlatFiles[[length(gFlatFiles) + 1]] <- x
} else if (filter == "i''") {
iFlatFiles[[length(iFlatFiles) + 1]] <- x
} else if (filter == "r''") {
rFlatFiles[[length(rFlatFiles) + 1]] <- x
} else if (filter == "y''") {
yFlatFiles[[length(yFlatFiles) + 1]] <- x
} else if (filter == "z''") {
zFlatFiles[[length(zFlatFiles) + 1]] <- x
} else {
print("NO FILTER: file should have a filter")
stopifnot(FALSE)
}
}
print(paste("Read in", counter, "of", count))
}
remove(files)
x <- darkFrameFiles[[1]]
Y <- readFITS(x)
Y$hdr
darkFrames <- list(c(),dim(c(length(exposureTimes))))
exposureTimes <- c()
for (x in darkFrameFiles) {
Y <- readFITS(x)
s <- Y$hdr[which(Y$hdr == "EXPTIME") + 1]
if (!is.element(s, exposureTimes)) {
exposureTimes <- c(exposureTimes, s)
}
}
darkFrames <- list(c(),dim(c(length(exposureTimes))))
exposureTimes
length(exposureTimes)
darkFrames <- list(c(),dim(length(exposureTimes)))
exposureTimes <- c()
for (x in darkFrameFiles) {
Y <- readFITS(x)
s <- Y$hdr[which(Y$hdr == "EXPTIME") + 1]
if (!is.element(s, exposureTimes)) {
exposureTimes <- c(exposureTimes,list(s))
}
}
(x in darkFrameFiles) {
Y <- readFITS(x)
counter <- counter + 1
for (y in 1:length(exposureTimes)){
if (exposureTimes[y][1])
}
# masterDark <- masterDark + Y$imDat - masterBias
print(paste("Read in", counter, "of", count))
}
counter <- 0
count <- length(darkFrameFiles)
Y <- readFITS(x)
counter <- counter + 1
for (y in 1:length(exposureTimes)){
if (exposureTimes[[y]][1])
}
# masterDark <- masterDark + Y$imDat - masterBias
print(paste("Read in", counter, "of", count))
}
for (x in darkFrameFiles) {
Y <- readFITS(x)
counter <- counter + 1
for (y in 1:length(exposureTimes)){
if (exposureTimes[[y]][1])
}
# masterDark <- masterDark + Y$imDat - masterBias
print(paste("Read in", counter, "of", count))
}
for (x in darkFrameFiles) {
Y <- readFITS(x)
counter <- counter + 1
for (y in 1:length(exposureTimes)){
if (exposureTimes[[y]][1])
}
# masterDark <- masterDark + Y$imDat - masterBias
print(paste("Read in", counter, "of", count))
}
for (x in darkFrameFiles) {
Y <- readFITS(x)
counter <- counter + 1
for (y in 1:length(exposureTimes)){
if (exposureTimes[[y]][1])
}
# masterDark <- masterDark + Y$imDat - masterBias
print(paste("Read in", counter, "of", count))
}
for (x in darkFrameFiles) {
Y <- readFITS(x)
counter <- counter + 1
for (y in 1:length(exposureTimes)){
exposureTimes[y]
}
# masterDark <- masterDark + Y$imDat - masterBias
print(paste("Read in", counter, "of", count))
}
for (x in darkFrameFiles) {
Y <- readFITS(x)
counter <- counter + 1
for (y in 1:length(exposureTimes)){
print(exposureTimes[y])
}
# masterDark <- masterDark + Y$imDat - masterBias
print(paste("Read in", counter, "of", count))
}
counter <- 0
count <- length(darkFrameFiles)
for (x in darkFrameFiles) {
Y <- readFITS(x)
s <- Y$hdr[which(Y$hdr == "EXPTIME") + 1]
counter <- counter + 1
for (y in 1:length(exposureTimes)){
print(exposureTimes[y][1])
if (exposureTimes[y][1] == s){
exposureTimes[y][length(exposureTimes[y]) + 1] <- x
}
}
# masterDark <- masterDark + Y$imDat - masterBias
print(paste("Read in", counter, "of", count))
}
warnings()
length(exposureTimes)
length(exposureTimes[y])
exposureTimes[y][length(exposureTimes[y]) + 1]
exposureTimes[y][length(exposureTimes[y]) + 1] <- "120"
exposureTimes[y][length(exposureTimes[y])] <- "120"
exposureTimes[y][length(exposureTimes[y])]
counter <- 0
count <- length(darkFrameFiles)
exposureTimes <- c()
for (x in darkFrameFiles) {
Y <- readFITS(x)
s <- Y$hdr[which(Y$hdr == "EXPTIME") + 1]
if (!is.element(s, exposureTimes)) {
exposureTimes <- c(exposureTimes,list(s))
}
}
for (x in darkFrameFiles) {
Y <- readFITS(x)
s <- Y$hdr[which(Y$hdr == "EXPTIME") + 1]
counter <- counter + 1
for (y in 1:length(exposureTimes)){
print(exposureTimes[y][1])
if (exposureTimes[y][1] == s){
exposureTimes[y] <- c(exposureTimes[y],x)
}
}
# masterDark <- masterDark + Y$imDat - masterBias
print(paste("Read in", counter, "of", count))
}
warnings
warnings()
for (x in darkFrameFiles) {
Y <- readFITS(x)
s <- Y$hdr[which(Y$hdr == "EXPTIME") + 1]
counter <- counter + 1
for (y in 1:length(exposureTimes)){
print(exposureTimes[y][1])
if (exposureTimes[[y]][1] == s){
exposureTimes[y] <- c(exposureTimes[y],x)
}
}
# masterDark <- masterDark + Y$imDat - masterBias
print(paste("Read in", counter, "of", count))
}
for (x in darkFrameFiles) {
Y <- readFITS(x)
s <- Y$hdr[which(Y$hdr == "EXPTIME") + 1]
counter <- counter + 1
for (y in 1:length(exposureTimes)){
print(exposureTimes[y,1])
if (exposureTimes[y,1] == s){
exposureTimes[y] <- c(exposureTimes[y],x)
}
}
# masterDark <- masterDark + Y$imDat - masterBias
print(paste("Read in", counter, "of", count))
}
for (x in darkFrameFiles) {
Y <- readFITS(x)
s <- Y$hdr[which(Y$hdr == "EXPTIME") + 1]
counter <- counter + 1
for (y in 1:length(exposureTimes)){
print(exposureTimes[y][1])
if (exposureTimes[[y]][1] == s){
exposureTimes[[y]] <- c(exposureTimes[[y]],x)
}
}
# masterDark <- masterDark + Y$imDat - masterBias
print(paste("Read in", counter, "of", count))
}
darkCounter <- function(files) {
masterDark <-
array(0, dim = c(xNumber, yNumber))
for (count in 1:length(files)) {
if (count == 1)
next
counter <- counter + 1
Y <- readFITS(x)
masterDark <- masterDark + Y$imDat - masterBias
}
masterDark <- masterDark / counter
return(masterDark)
}
masterDarks <- list()
masterDarkTimes <- list()
for (i in 1:length(darkFrameFiles)) {
masterDarks[[length(masterDarks) + 1]] <-
darkCounter(darkFrameFiles[[i]])
masterDarkTimes[[length(masterDarkTimes) + 1]] <-
darkFrameFiles[[i]][1]
}
darkFrameFiles[[1]]
darkFrameFiles[1]
darkFrameFiles[2]
darkFrameFiles[[1]][1]
darkFrameFiles[[1]][2]
a <- 3
mylot <- hist(masterFlats[[1]],col = colors[1])
masterFlats <- list(masterGFlat,
masterRFlat,
masterIFlat,
masterYFlat,
masterZFlat)
for (i in length(masterFlats):1) {
if (is.nan(masterFlats[[i]][xNumber / 2, yNumber / 2])) {
masterFlats[[i]] <- NULL
}
}
masterRFlat <- flatFunction(rFlatFiles)
source('~/Github/HWS-Perkin-DR/Filter_Image_Processing_Script.R', echo=TRUE)
xmin
xmax
myplot <- hist(
masterFlats[[1]],
col = colors[1],
xlim = c(xmin, xmax),
main = "Master flats"
)
for (i in 2:length(masterFlats)) {
hist(masterFlats[[i]],
col = colors[[i]],
add = T)
}
myplot <- hist(
masterFlats[[1]],
col = colors[1],
xlim = c(xmin, xmax),
main = "Master flats"
)
mid <- myplot$mids
dens <- myplot$density
plot(mid,dens)
myplot <- c()
myplot[1] <- hist(
masterFlats[[1]],
col = colors[1],
xlim = c(xmin, xmax),
main = "Master flats"
)
for (i in 2:length(masterFlats)) {
myplot[i] <- hist(masterFlats[[i]],
col = colors[[i]],
add = T)
}
mid <- myplot[[1]]$mids
dens <- myplot[[1]]$density
plot(mid, dens, col = colors[[1]])
for (i in 2:length(myplot)) {
mid <- myplot[[i]]$mids
dens <- myplot[[i]]$density
plot(mid, dens, col = colors[[i]], add = T)
}
myplot <- c()
myplot[[1]] <- hist(
masterFlats[[1]],
col = colors[[1]],
xlim = c(xmin, xmax),
main = "Master flats"
)
for (i in 2:length(masterFlats)) {
myplot[i] <- hist(masterFlats[[i]],
col = colors[[i]],
add = T)
}
mid <- myplot[[1]]$mids
dens <- myplot[[1]]$density
plot(mid, dens, col = colors[[1]])
for (i in 2:length(myplot)) {
mid <- myplot[[i]]$mids
dens <- myplot[[i]]$density
plot(mid, dens, col = colors[[i]], add = T)
}
myplot <- c()
myplot[[1]] <- hist(
masterFlats[[1]],
col = colors[[1]],
xlim = c(xmin, xmax),
main = "Master flats"
)
for (i in 2:length(masterFlats)) {
myplot[[i]] <- hist(masterFlats[[i]],
col = colors[[i]],
add = T)
}
mid <- myplot[[1]]$mids
dens <- myplot[[1]]$density
plot(mid, dens, col = colors[[1]])
for (i in 2:length(myplot)) {
mid <- myplot[[i]]$mids
dens <- myplot[[i]]$density
plot(mid, dens, col = colors[[i]], add = T)
}
myplot <- c()
myplot[[1]] <- hist(
masterFlats[[1]],
col = colors[[1]],
xlim = c(xmin, xmax),
main = "Master flats"
)
for (i in 2:length(masterFlats)) {
myplot[[i]] <- hist(masterFlats[[i]],
col = colors[[i]],
add = T)
}
mid <- myplot[[1]]$mids
dens <- myplot[[1]]$density
plot(mid, dens, col = colors[[1]])
for (i in 2:length(myplot)) {
mid <- myplot[[i]]$mids
dens <- myplot[[i]]$density
dots(mid, dens, col = colors[[i]])
}
matplot(mids, dens,col = colors)
myplot <- c()
myplot[[1]] <- hist(
masterFlats[[1]],
col = colors[[1]],
xlim = c(xmin, xmax),
main = "Master flats"
)
for (i in 2:length(masterFlats)) {
myplot[[i]] <- hist(masterFlats[[i]],
col = colors[[i]],
add = T)
}
# mid <- myplot[[1]]$mids
# dens <- myplot[[1]]$density
# plot(mid, dens, col = colors[[1]])
for (i in 1:length(myplot)) {
mid[[i]] <- myplot[[i]]$mids
dens[[i]] <- myplot[[i]]$density
# dots(mid, dens, col = colors[[i]])
}
matplot(mids, dens,col = colors)
mid <- c()
dens <- c()
for (i in 1:length(myplot)) {
mid[[i]] <- myplot[[i]]$mids
dens[[i]] <- myplot[[i]]$density
# dots(mid, dens, col = colors[[i]])
}
matplot(mids, dens,col = colors)
mids <- c()
dens <- c()
for (i in 1:length(myplot)) {
mids[[i]] <- myplot[[i]]$mids
dens[[i]] <- myplot[[i]]$density
# dots(mid, dens, col = colors[[i]])
}
matplot(mids, dens,col = colors)
myplot[[1]] <- hist(
masterFlats[[1]],
col = colors[[1]],
xlim = c(xmin, xmax),
main = "Master flats"
)
for (i in 2:length(masterFlats)) {
myplot[[i]] <- hist(masterFlats[[i]],
col = colors[[i]],
add = T)
}
array(list(),dim = c(1,4))
a <- array(list(),dim = c(1,4))
a[[1]]
a[[1]][[1]] <- 2
a[[1]]
a[[1]][[2]] <- 3
a[[1]] <- (1,2,4,2,3,5)
a[[1]] <- list(1,2,4,2,3,5)
a
a[[1]]
a[[1]][[2]]
hist(
masterFlats[[1]],
col = colors[[1]],
xlim = c(xmin, xmax),
main = "Master flats",
breaks = 20
)
for (i in 2:length(masterFlats)) {
hist(masterFlats[[i]],
col = colors[[i]],
breaks = 20,
add = T)
}
hist(
masterFlats[[1]],
col = colors[[1]],
xlim = c(xmin, xmax),
main = "Master flats",
breaks = 100
)
for (i in 2:length(masterFlats)) {
hist(masterFlats[[i]],
col = colors[[i]],
breaks = 100,
add = T)
}
